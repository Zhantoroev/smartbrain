{"version":3,"sources":["components/Navigation/Navigation.js","components/FaceRecognition/FaceRecognition.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","App.js","serviceWorker.js","index.js","components/Logo/brain.png"],"names":["Navigation","onRouteChange","isSignedIn","style","display","justifyContent","onClick","className","FaceRecognition","imageUrl","box","id","alt","src","width","height","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","Signin","htmlFor","type","name","value","Register","Logo","options","max","paddingTop","brain","ImageLinkForm","onInputChange","onButtonSubmit","onChange","app","Clarifai","App","apiKey","particlesOptions","particles","number","density","enable","value_area","calculateFaceLocation","data","clarifaiFace","outputs","regions","region_info","bounding_box","image","document","getElementById","Number","left_col","top_row","right_col","bottom_row","displayFaceBox","console","log","setState","event","input","target","state","models","predict","FACE_DETECT_MODEL","then","response","catch","err","route","this","params","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.1644daaa.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn }) => {\r\n    if (isSignedIn) {\r\n        return (\r\n        <nav style ={{display: 'flex', justifyContent: 'flex-end'}}>\r\n            <p onClick={() => onRouteChange('signout')} className='f3 link din black underline pa3 pointer'>Sign Out</p>\r\n        </nav>\r\n        );\r\n    } else {\r\n        return (\r\n            <nav style ={{display: 'flex', justifyContent: 'flex-end'}}>\r\n                <p onClick={() => onRouteChange('signin')} className='f3 link din black underline pa3 pointer'>Sign In</p>\r\n                <p onClick={() => onRouteChange('register')} className='f3 link din black underline pa3 pointer'>Register</p>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({imageUrl, box}) => {\r\n    return (\r\n        <div className='center ma'>\r\n            <div className='absolute mt2'>\r\n                <img id='inputimage' alt='' src={imageUrl} width='500px' height='auto'/>\r\n                <div className='bounding-box' style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}></div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\n\r\nconst Signin = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input \r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\" value=\"Sign in\" \r\n                        />\r\n                    </div>\r\n                    <div className=\"lh-copy mt3\">\r\n                    <p onClick={() => onRouteChange('register')} className=\"f6 link dim black db pointer\">Register</p>\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Signin;","import React from 'react';\r\n\r\nconst Register = ({ onRouteChange }) => {\r\n    return (\r\n        <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n            <main className=\"pa4 black-80\">\r\n                <div className=\"measure\">\r\n                    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n                    <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">Name</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"text\" name=\"name\"  id=\"name\" />\r\n                    </div>\r\n                    <div className=\"mt3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email</label>\r\n                        <input className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"email\" name=\"email-address\"  id=\"email-address\" />\r\n                    </div>\r\n                    <div className=\"mv3\">\r\n                        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\r\n                        <input className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\" type=\"password\" name=\"password\"  id=\"password\" />\r\n                    </div>\r\n                    </fieldset>\r\n                    <div className=\"\">\r\n                        <input \r\n                            onClick={() => onRouteChange('home')}\r\n                            className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                            type=\"submit\" value=\"Register\" \r\n                        />\r\n                    </div>\r\n                </div>\r\n            </main>\r\n        </article>\r\n    );\r\n}\r\n\r\nexport default Register;","import React from 'react';\r\nimport Tilt from 'react-tilt'\r\nimport brain from './brain.png';\r\nimport './Logo.css';\r\n\r\nconst Logo = () => {\r\n    return (\r\n        <div className= 'ma4 mt0 center'>\r\n            <Tilt className=\"Tilt br2 shadow-2\" options={{ max : 50 }} style={{ height: 150, width: 150 }} >\r\n                <div className=\"Tilt-inner pa3\">\r\n                    <img style={{paddingTop: '5px'}} alt=\"logo\" src={brain}/>\r\n                </div>\r\n            </Tilt>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Logo;","import React from 'react';\r\nimport './ImageLinkForm.css';\r\n\r\nconst ImageLinkForm = ({onInputChange, onButtonSubmit} ) => {\r\n    return (\r\n        <div>\r\n            <p className='f2 washed-blue'>  \r\n                {'This Brain will detect faces in your picture'}\r\n            </p>\r\n            <div className = 'center'>\r\n                <div className = 'form center pa4 br3 shadow-5'>\r\n                    <input className = 'f4 pa2 w-70 center' type='tex' onChange={onInputChange}/>\r\n                    <button\r\n                        className = 'w-30 grow f4 link ph3 pv2 dib white buttonS' \r\n                        onClick={onButtonSubmit}\r\n                    >Detect</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageLinkForm;","import React, { Component } from 'react';\nimport Particles from 'react-particles-js';\nimport Clarifai from 'clarifai';\nimport Navigation from './components/Navigation/Navigation';\nimport FaceRecognition from './components/FaceRecognition/FaceRecognition';\nimport Signin from './components/Signin/Signin';\nimport Register from './components/Register/Register';\nimport Logo from './components/Logo/Logo';\nimport ImageLinkForm from './components/ImageLinkForm/ImageLinkForm';\nimport './App.css';\nimport 'tachyons';\n\nconst app = new Clarifai.App({\n  apiKey: '90153ea43eb74fa5a9cd77b7ed7bb047'\n});\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 50,\n      density: {\n        enable: true,\n        value_area: 400\n      }\n    }\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      input: '',\n      imageUrl: '',\n      box: {},\n      route: 'signin',\n      isSignedIn: false\n    }\n  }\n\n  calculateFaceLocation = (data) => {\n    const clarifaiFace = data.outputs[0].data.regions[0].region_info.bounding_box;\n    const image = document.getElementById('inputimage');\n    const width = Number(image.width);\n    const height = Number(image.height);\n    return {\n      leftCol: clarifaiFace.left_col * width,\n      topRow: clarifaiFace.top_row * height,\n      rightCol: width - (clarifaiFace.right_col * width),\n      bottomRow: height - (clarifaiFace.bottom_row * height)\n    }\n  }\n\n  displayFaceBox = (box) => {\n    console.log(box);\n    this.setState({box: box});\n  }\n\n  onInputChange = (event) => {\n    this.setState({input: event.target.value});\n  }\n\n  onButtonSubmit = () => {\n    this.setState({imageUrl: this.state.input});\n    app.models\n      .predict(\n        Clarifai.FACE_DETECT_MODEL, \n        this.state.input)\n      .then(response => this.displayFaceBox(this.calculateFaceLocation(response)))\n      .catch(err => console.log(err));\n  }\n\n  onRouteChange = (route) => {\n    if (route === 'signout') {\n      this.setState({isSignedIn: false})\n    } else if (route=== 'home') {\n      this.setState({isSignedIn: true})\n    }\n    this.setState({route: route});\n  }\n\n  render() {\n    const {isSignedIn, imageUrl, route, box} = this.state;\n    return (\n      <div className=\"App\">\n        <Particles className = 'particles'\n        params={particlesOptions}/>\n\n        <Navigation isSignedIn={isSignedIn} onRouteChange={this.onRouteChange}/>\n        {route === 'home'\n          ? <div>\n              <Logo /> \n              <ImageLinkForm \n                onInputChange={this.onInputChange}\n                onButtonSubmit={this.onButtonSubmit}\n              />\n              <FaceRecognition box={box} imageUrl={imageUrl} />\n            </div>\n          : (\n            route === 'signin'\n            ? <Signin onRouteChange={this.onRouteChange} />\n            : <Register onRouteChange={this.onRouteChange} />\n            )\n        } \n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/brain.6115d525.png\";"],"sourceRoot":""}